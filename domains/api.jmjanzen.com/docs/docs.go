// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/interests": {
            "get": {
                "description": "get a JSON array of strings",
                "summary": "Get all interests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/interests/{slug}": {
            "get": {
                "description": "get interest, based on provided slug",
                "produces": [
                    "application/json"
                ],
                "summary": "Get interest",
                "parameters": [
                    {
                        "type": "string",
                        "description": "slug of specific interest",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interests.Interest"
                        }
                    }
                }
            }
        },
        "/modes/{id}": {
            "get": {
                "description": "get a representation of my mode by mode id",
                "produces": [
                    "application/json"
                ],
                "summary": "Get my modes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "which mode",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modes.Mode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/modes.NotFound"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/modes.Error"
                        }
                    }
                }
            }
        },
        "/tils": {
            "get": {
                "description": "get a JSON array of strings",
                "summary": "Get all tils",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tils/{slug}": {
            "get": {
                "description": "get til, based on provided slug",
                "produces": [
                    "application/json"
                ],
                "summary": "Get til",
                "parameters": [
                    {
                        "type": "string",
                        "description": "slug of specific til",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tils.Til"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "interests.Interest": {
            "type": "object",
            "properties": {
                "aliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "elaborationUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passion": {
                    "type": "number"
                },
                "slug": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                }
            }
        },
        "modes.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "modes.Mode": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "id": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                }
            }
        },
        "modes.NotFound": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "tils.Til": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
